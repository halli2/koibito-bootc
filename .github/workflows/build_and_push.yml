name: Build bootc image
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "README.md"
      - "justfile"
      - "brew.yml"
      - ".github/**"
    branches:
      - main
  schedule:
    - cron: "5 4 * * 2,5" # Should be after official fedora pushes

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      IMAGE_TAG: latest
      IMAGE_NAME: ${{ github.event.repository.name }}
      REGISTRY: ghcr.io/${{ github.repository_owner }}

    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
          remove-large-packages: "true"
          remove-cached-tools: "true"
          remove-swap-file: "true"
          verbose: "false"
      # Based on https://github.com/orgs/community/discussions/25678
      # Uncomment if builder runs out of space
      # - name: Delete huge unnecessary tools folder
      #   run: |
      #     rm -rf /opt/hostedtoolcache
      #     rm -rf /usr/share/dotnet

      - name: Clone repo
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: |
          # This generates a timestamp like what is defined on the ArtifactHub documentation
          # E.G: 2022-02-08T15:38:15Z'
          # https://artifacthub.io/docs/topics/repositories/container-images/
          # https://linux.die.net/man/1/date
          echo "date=$(date -u +%Y\-%m\-%d\T%H\:%M\:%S\Z)" >> $GITHUB_OUTPUT

      - name: Build image
        id: build-image
        shell: bash
        run: sudo podman build -t localhost/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Rechunk image
        id: rechunk-image
        shell: bash
        run: |
          sudo podman run --rm \
            --privileged \
            -v /var/lib/containers:/var/lib/containers \
            "quay.io/centos-bootc/centos-bootc:stream10" \
            /usr/libexec/bootc-base-imagectl rechunk \
              localhost/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              localhost/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # - name: Use buildah to create the image
      #   id: build-image
      #   uses: redhat-actions/buildah-build@v2
      #   with:
      #     image: ${{ env.IMAGE_NAME }}
      #     tags: latest ${{ github.sha }}
      #     containerfiles: ./Containerfile
      # Since redhat-actions/buildah-build@v2 doesnt use sudo, run it manually
      # or else rechunker won't work.
      # - name: Build the image
      #   id: build-image
      #   shell: bash
      #   run: |
      #     sudo buildah build --pull=newer --tag raw_img

      #- name: Rechunk
      #  id: rechunk
      #  uses: hhd-dev/rechunk@v1.1.3
      #  with:
      #    rechunk: ghcr.io/hhd-dev/rechunk:v1.1.3
      #    ref: raw_img
      #    prev-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}
      #    skip_compression: true
      #    labels: ${{ steps.metadata.outputs.labels }}

      # name: Load in podman and tag
      #  run: |
      #    IMAGE=$(podman pull ${{ steps.rechunk.outputs.ref }})
      #    sudo rm -rf ${{ steps.rechunk.outputs.output }}
      #    for tag in ${{ steps.metadata.outputs.tags }}; do
      #      podman tag $IMAGE ${{ env.IMAGE_NAME }}:$tag
      #    done

      - name: Log in to Github Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GHCR
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          # image: ${{ steps.build-image.outputs.image }}
          # tags: ${{ steps.build-image.outputs.tags }}
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAG }}
          registry: ${{ env.REGISTRY }}
